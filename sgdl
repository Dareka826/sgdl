#!/bin/sh

# Print usage based on docopt
usage() {
	echo "Simple Gelbooru Downloader"
	echo ""
	echo "Usage:"
	echo "  sgdl [-v] [-f] -i <id>..."
	echo "  sgdl [-v] [-f] -p <pid>"
	echo "  sgdl [-v] [-f] -t <tags>"
	echo "  sgdl [-v] [-f] -t <tags> -p <pid>"
	echo ""
	echo "Options:"
	echo "  -h            Show this text"
	echo "  -i <id>...    Specify the id/ids of posts to download"
	echo "  -p <pid>      Specify a page id"
	echo "  -t <tags>     Specify tags to search with"
	echo "  -f            Enable fringe content"
	echo "  -v            Verbose"

	exit 0
}

# Gets image url from an id
get_image() {
	# $1 - ID
	[ "$1" = "" ] && return

	VOPT="-s"
	[ $VERBOSE = 1 ] && VOPT=""

	echo $(curl $VOPT -L "https://gelbooru.com/index.php" \
		--cookie "fringeBenefits=$FRINGE" \
		-G -d "page=post" -d "s=view" \
		-d "id=$1" | \
			grep -Po "href=\"http.*?Original image" | \
			grep -Po "\"http.*?\"" | \
			grep -o "[^\"]*")
}

# Downloads one or multiple id(s)
# $1 - IDs
download_ids() {
	VOPT="-s"
	[ $VERBOSE = 1 ] && VOPT=""

	for ID in $1; do
		local URL=$(get_image $ID)
		echo "[I]: Downloading [$ID]: $URL" 1>&2
		curl $VOPT -LO $URL

		if [ $? != 0 ]; then
			echo "[E]: An error occured when downloading [$ID]" 1>&2
			COMPLETED_SUCCESSFULLY=0
		fi
	done
}

# Gets ids of posts on a specified page
# $1 - PID
get_page_ids() {
	local PID=$1
	[ "$PID" = "" ] && local PID=0

	VOPT="-s"
	[ $VERBOSE = 1 ] && VOPT=""

	echo $(curl $VOPT -L "https://gelbooru.com/index.php"\
		-G -d "page=post" -d "s=list" \
		--cookie "fringeBenefits=$FRINGE" \
		-d "pid=$PID" | \
			grep -Po "\"//gelbooru.*?id=[0-9]+.*?\"" | \
			grep -Po "id=[0-9]+" | grep -o "[0-9]*")
}

# Get ids of posts with specified tags on a specified page
# $1 - PID
# $2 - TAGS
get_tag_page_ids() {
	local PID=$1
	[ "$PID" = "" ] && local PID=0

	local TAGS=$2
	[ "$TAGS" = "" ] && return

	VOPT="-s"
	[ $VERBOSE = 1 ] && VOPT=""

	echo $(curl $VOPT -L "https://gelbooru.com/index.php" \
		-G -d "page=post" -d "s=list" \
		--cookie "fringeBenefits=$FRINGE" \
		--data-urlencode "tags=$TAGS" \
		-d "pid=$PID" | \
			grep -Po "\"//gelbooru.*?id=[0-9]+.*?\"" \
			| grep -Po "id=[0-9]+" | grep -o "[0-9]*")
}

FRINGE="nope"
IDS=""
PID=""
TAGS=""
VERBOSE=0
while [ "$1" != "" ]; do
	case $1 in
		"-f") FRINGE="yup" ;;
		"-i") IDS="$2"; shift ;;
		"-p") PID="$2"; shift ;;
		"-t") TAGS="$2"; shift ;;
		"-v") VERBOSE=1 ;;
		"-h") usage ;;
	esac
	shift
done

COMPLETED_SUCCESSFULLY=1

if [ "$IDS" != "" ]; then
	# ID mode
	echo "[I]: Running in id mode"
	download_ids "$IDS"
else
	if [ "$PID" != "" ]; then
		if [ "$TAGS" = "" ]; then
			# Page mode [not tested, but should work]
			echo "[I]: Running in page mode"
			download_ids "$(get_page_ids $(($PID * 42)))"
		else
			# Tags + pid
			echo "[I]: Running in tag + page mode"
			download_ids "$(get_tag_page_ids $(($PID * 42)) "$TAGS")"
		fi
	else
		if [ "$TAGS" != "" ]; then
			# Tag mode
			echo "[I]: Running in tag mode"
			PID=0
			IDS=$(get_tag_page_ids $PID "$TAGS")
			while [ "$IDS" != "" ]; do
				printf "\n[I] Page ID: $PID (Page $(($PID / 42))\n\n"
				download_ids "$IDS"
				PID=$(($PID + 42))
				IDS=$(get_tag_page_ids $PID "$TAGS")
			done
		fi
	fi
fi

if [ $COMPLETED_SUCCESSFULLY = 0 ]; then
	echo "[I]: Exiting with a non-zero status due to prevoius errors"
	exit 1
fi

